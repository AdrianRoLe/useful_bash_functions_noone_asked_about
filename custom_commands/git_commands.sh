
function git_reset() {
    if [ -z "$1" ]; then
        echo "Please provide a branch name"
        return 1
    fi
    git checkout development
    git fetch
    git pull
    git branch --delete --force $1
    git checkout -b $1
}

function git_task() {
    if [ -z "$1" ]; then
        echo "Please provide a task ID"
        return 1
    fi
    if [ -z "$2" ]; then
        echo "Marked as task"
        task_type="task"
    else
        echo "Marked as $2"
        task_type=$2
    fi
    git branch --delete --force $task_type/$1
    git checkout -b $task_type/$1
}

function git_task_pr() {
    if [ -z "$1" ]; then
        # select the current branch name without the task type
        set -- $(git branch | grep \* | cut -d '/' -f2)
        echo "No task ID provided, using current branch name: $1"
    fi
    if [ -z "$2" ]; then
        echo "Marked as task"
        task_type="task"
    else
        echo "Marked as $2"
        task_type=$2
    fi
    # ask for commit message
    echo "Please provide a commit message:"
    echo "*$1:*"
    read commit_message
    
    # commit staged changes
    git commit -m "$1: $commit_message"
    
    # push to remote
    git push --set-upstream origin $task_type/$1
    
    # get project url
    project_url=$(git config --get remote.origin.url)
    echo "Project URL: $project_url"
    
    # autogenerate pull request text
    pr_message="Please review the following changes:\n\n"
    pr_message+=$(git log --oneline -n 1)
    pr_message+="\n\n"
    pr_message+="This pull request was automatically generated by the following command:\n\n"
    pr_message+="git_task_pr $1 $2"
    
    # create pull request
    git request-pull development $project_url $task_type/$1 -p "$pr_message"
}